
#+TITLE: Outreach Portal
#+AUTHOR: VLEAD
#+DATE: [2016-02-05 Fri]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ./org-templates/level-0.org
#+options: ^:nil


* Introduction
  [[www.vlabs.ac.in][Virtual Labs]] is an initiative of Ministry of Human Resources, India.  Virtual
  Labs is intended to augment the learning of engineering subjects through
  performing experiments.  The experiments are designed either as simulations
  or as remote triggered.  A remote triggered lab allows a user to connect to
  real equipment using a web browser.  There are around 150 and labs and 1500
  experiments.

  The evolution of virtual labs is a function of realization of the ideas
  listed here.  Some of them are work in progress and others are yet to make a
  takeoff.

* Presence
** IRC Channels
   1. #vlead :: used by the community developing the infrastructure for Virtual
                Labs.
   2. #vlabs-integrators :: used by lab developers and integrators.

   Both the channels are on freenode network. 

** Sources
   1. www.github.com/vlead :: sources of projects related to infrastructure of
        Virtual Labs
   2. www.github.com/Virtual-Labs :: sources of different labs that make up
        Virtual Labs

** Documentation

** Mailing List
   =Issues= provided by github will be the placeholder for all the technical
   and non technical discussions about architecture, design, features,
   enhancements, etc., for every project.  Appropriate labels will categorize
   the issues.

* Ideas
** Experiment as a Service
   Experiment as a Service is a runtime environment that is a congealment
   of various javascript objects to provide a mechanism to log the entire event
   space of interaction, viz. listening to an audio clip, running a simulation
   etc,.  This event log is provided as a service via REST API for the
   encompassing application to provide persistence, analytics, quizzes
   etc. based on the user's progress. 

   For more information refer to the [[https://github.com/vlead/virtual-labs-as-a-service/blob/master/src/index.org][architecture]].


** Authentication between different software services at VLEAD
   Virtual Labs is supported by a slew of micro services. [[https://github.com/vlead/ovpl][ADS]] - Auto Deployment
   Service is used to deploy a virtual lab.  This service transforms a src url
   on github to a hosted url with a domain name.  [[https://github.com/vlead/dataservice][dataservice]] is another
   service which acts as a central repository of information about virtual
   labs.  [[https://github.com/vlead/outreach-portal.git][Outreach Portal]] feeds from another service specifically built for the
   portal.  These services could potentially be used by either other services
   are other portals.  A mechanism needs to be built to ensure only authorized
   users/services have access to the data and provide a way to authenticate
   these authorized users/services.


** Developing different portals
   Portals that consume data from the services and provide an interface to the
   users are an important ingredient of Virtual Labs.  
   
   One such portal is [[http://outreach.vlabs.ac.in/][outreach portal]] that is in production.  The sources are
   at http://github.com/vlead/outreach-portal.git 

   A [[https://github.com/vlead/vlabs-dashboard][virtual labs dashboard]] that provides information about all the virtual
   labs - what are the technologies used by the lab, what is the source
   repository of a lab, etc., - is in pipeline.

   A portal that supports lab development and continuous integration needs to
   be built.  This portal helps a lab developer to host a lab in a test
   environment and allow a developer to post a request to host it in
   production.  This portal can also provide run time health and statics of any
   lab that running in a VM.


** Automation of Test Cases
   Each virtual lab is a web application.  Testing of the web application by
   running through the user scenarios is manual right now.  These integrated
   test cases have to automated.  This will greatly help the cause of
   continuous integration where these integrated test cases could be run after
   the web application is deployed. 


** Continuous Integration
   A lab is currently defined as a set of related experiments and is a web
   application.  Each lab is a repository on github.  To ensure evolution of
   software and solicit contribution from folks across the world, continuous
   integration is to be built around each lab.  A cycle for integration will
   involve building the code, running the unit test cases, hosting the
   application and running the integration tests. 


** AWS Lambda
   Currently each virtual lab runs from an individual Amazon Webservices(AWS)
   VM.  Virtual Labs would like to explore AWS Lambda that allows execution of
   requested code.  Virtual Labs are a collection of simulations and each
   simulation is associated with code, running a simulation is equivalent to
   running the code on demand.  Harnessing AWS Lambda could significantly
   reduce the costs of hosting Virtual Labs.


** Semantic Style Sheets
This is a system development project. We are interested to develop a
style sheet system -- which is very similar to CSS. This system will
have multiple components:  
 + SSS Renarrator Studio tool, 
 + SSS Browser tool, 
 + SSS Storage tool,
 + SSS configurator tool
 
The work for this project will involve handling of markups &
annotations, persistent storage (using MongoDB),  working with
Ontologies (i.e. .owl files, Protege tool) etc.  

The work for *SSS Renarrator* will involve web application development
work. It will require Python/Flask backend development skills, coupled
with AngularJS, JavaScript type fornt-end work. For storage MongoDB
will be used.  

The work for *SSS BRowser* will be similar to that of SSS
Renarrator. There would lot of code reuse as well. 

The work for *SSS Storage* will require handling of APIs related to
Sweet Stores developed by Janastu. 

The work for *SSS Configurator* will require handling of Ontologies. 

*** who can engage in this project
This is an open source project. Anyone with web application
development interest and skill set can register and engage in the
process.  

The skills that are required for this project include:
 + Python/Flask based web app development
 + JavaScript front end development
 + Restful web services development
 
*** contact information
saigollapudi1@gmail.com can be contacted for engagement in this project. 


** Renarration Phoetics
Did you know that non-native English speakers struggle to read complex
English words on printed text? Did you know that there are some
universally accepted phonetic symbols that can be used inplace of
conventional English alphabet that can help a novice reader in getting
familiar with uncommon English words? 

Imagine a tool that would take existing conventional webpages (with
English content) and with the click of a button help convert either a
particular word or the entire page into its phonetic equivalent
alaphabet. So, a novice reader would essentially request a page for
review, find that it has some words that are difficult for her to
follow... then, with a click of a button, request the complex words to
be changed into their phonetically equivalent texts. 

This project __Renarration Phonetics__ is aimed at developing a tool
that enables such a convertion of conventional English alphabet into
its phonetic equivalent. 

*** Renarration
Renarration is word that has been invented by some of us to mean the re-purposing, re-publishing, re-narrating of existing content. When we say Renarration Phonetics, we are essentially suggesting that we aim to re-narrate the existing (earmarked) web content into its English phonetic equivalent.

*** goal of the project
The goal of the project is to develop a restful web service based tool that would replace a earmarked portion of a web page and replace it with a phonetic symbol set.

*** who can engage in this project 
This is an open source project. Anyone with web application development interest and skill set can register and engage in the process. 

The skills that are required for this project include:
 + Python/Flask based web app development
 + JavaScript front end development
 + Restful web services development
 
*** contact information 
saigollapudi1@gmail.com can be contacted for engagement in this project.


** Renarration Code Comprehension
This project is focusing on renarration of code. The project falls
under the domain of code comprehension.  Our assumption is that a
Maintenance Engineer is having to look at some code that is accessible
on the web.  
 + How does this maint. engineer make sense of what has been written
   sometime ago by some other author?  
 + How to enable better code comprehension?  
 
Our strategy is to use renarration as a mechanism to enable code
comprehension.  
 
We will develop this project as a Sweet Based renarration
application. The development will be done in several releases r0, r1,
r2...    

*** Overall Project goal
Enable better project comprehension. Aim is to assist a code
maintenance engineer better comprehend earlier developed and often
poorly documented code.    

*** Process
We will develop this system in a series of releases labeled r0, r1 ... etc.

*** who can participate?
Any developer who is interested in web application development can
participate. The skills required include: 
+ Python / Flask based web application development
+ JavaScript based front-end development
+ knowledge of common coding and code maintenance practices of Software Engineering

*** Contact Info
Incase you are interested, pls contact saigollapudi1@gmail.com for
further information. 


** Experiment Implementation from a paper prototype
